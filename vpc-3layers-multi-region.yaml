---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC-3-layer-multi-region'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - ClassB        
Parameters:
  ClassA:
    Description: 'Class A of VPC (???.*.*.*/16)'
    Type: Number
    Default: 0
    Description: Put the Cass A of the VPC example = 10.*.*.*/16 , 192.*.*.*/16 , 172.*.*.*/16
  ClassB:
    Description: 'Class B of VPC (*.???.*.*/16)'
    Type: Number
    Default: 0
    Description: Put the Cass A of the VPC example = *.10.*.*/16 , *.168.*.*/16 , *.8.*.*/16
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255
  CustomerId:
    Type: String
    Description: Put the CustomerId or TenantID example = bank123 OR sandbox     
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '${ClassA}.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-VPC'
      - Key: CustomerId
        Value: !Sub '${CustomerId}'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-IG'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetAPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.0.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PUB-SUBNET-AZ-A'
      - Key: Reach
        Value: public
  SubnetBPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.32.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PUB-SUBNET-AZ-B'
      - Key: Reach
        Value: public
  SubnetCPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.64.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PUB-SUBNET-AZ-C'
      - Key: Reach
        Value: public
  SubnetAPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.16.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PRIV-SUBNET-AZ-A'
      - Key: Reach
        Value: private
  SubnetBPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.48.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PRIV-SUBNET-AZ-B'
      - Key: Reach
        Value: private
  SubnetCPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.80.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PRIV-SUBNET-AZ-C'
      - Key: Reach
        Value: private       
  SubnetAIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.96.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-INTRA-SUBNET-AZ-A'
      - Key: Reach
        Value: private
  SubnetBIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.112.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-INTRA-SUBNET-AZ-B'
      - Key: Reach
        Value: private
  SubnetCIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '${ClassA}.${ClassB}.128.0/20'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-INTRA-SUBNET-AZ-C'
      - Key: Reach
        Value: private
  RouteTablePublic: 
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PUBLIC-RT'
  RouteTablePrivate: 
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-PRIVATE-RT'
  RouteTableIntra:  
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-INTRA-RT'
  RouteTableAssociationAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPublic
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPublic
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationCPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPublic
      RouteTableId: !Ref RouteTablePublic 
  RouteTableAssociationAPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPrivate
      RouteTableId: !Ref RouteTablePrivate
  RouteTableAssociationBPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPrivate
      RouteTableId: !Ref RouteTablePrivate
  RouteTableAssociationCPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPrivate
      RouteTableId: !Ref RouteTablePrivate
  RouteTableAssociationAIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAIntra
      RouteTableId: !Ref RouteTableIntra
  RouteTableAssociationBIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBIntra
      RouteTableId: !Ref RouteTableIntra
  RouteTableAssociationCIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCIntra
      RouteTableId: !Ref RouteTableIntra       
  RouteTablePublicInternetRoute: 
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-EIP'
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 'EIP.AllocationId'
      SubnetId: !Ref SubnetAPublic
      Tags:
      - Key: Name
        Value: !Sub '${CustomerId}-${AWS::Region}-NAT'
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway  
Outputs:
  TemplateID:
    Description: 'TemplateID'
    Value: 'VPC-3-layer-multi-region'
  AZs:
    Description: 'AZs'
    Value: 3
    Export:
      Name: !Sub '${CustomerId}-AZs'
  AZA:
    Description: 'AZ of A'
    Value: !Select [0, !GetAZs '']
    Export:
      Name: !Sub '${CustomerId}-AZA'
  AZB:
    Description: 'AZ of B'
    Value: !Select [1, !GetAZs '']
    Export:
      Name: !Sub '${CustomerId}-AZB'
  AZC:
    Description: 'AZ of C'
    Value: !Select [2, !GetAZs '']
    Export:
      Name: !Sub '${CustomerId}-AZC'
  ClassB:
    Description: 'Class B.'
    Value: !Ref ClassB
    Export:
      Name: !Sub '${CustomerId}-ClassB'
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${CustomerId}-VPC'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic, !Ref SubnetCPublic]]
    Export:
      Name: !Sub '${CustomerId}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets private.'
    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate, !Ref SubnetCPrivate]]
    Export:
      Name: !Sub '${CustomerId}-SubnetsPrivate'
  SubnetsIntra:
    Description: 'Subnets intra.'
    Value: !Join [',', [!Ref SubnetAIntra, !Ref SubnetBIntra, !Ref SubnetCIntra]]
    Export:
      Name: !Sub '${CustomerId}-SubnetsIntra'
  RouteTablePublic: 
    Description: 'Route table public (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTablePublic
    Export:
      Name: !Sub '${CustomerId}-RouteTablePublic'
  RouteTablePrivate: 
    Description: 'Route table private (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTablePrivate
    Export:
      Name: !Sub '${CustomerId}-RouteTablePrivate'
  RouteTableIntra: 
    Description: 'Route table intra (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTableIntra
    Export:
      Name: !Sub '${CustomerId}-RouteTableIntra'
  SubnetAPublic:
    Description: 'Subnet A public.'
    Value: !Ref SubnetAPublic
    Export:
      Name: !Sub '${CustomerId}-SubnetAPublic'
  SubnetAPrivate:
    Description: 'Subnet A private.'
    Value: !Ref SubnetAPrivate
    Export:
      Name: !Sub '${CustomerId}-SubnetAPrivate'
  SubnetBPublic:
    Description: 'Subnet B public.'
    Value: !Ref SubnetBPublic
    Export:
      Name: !Sub '${CustomerId}-SubnetBPublic'
  SubnetBPrivate:
    Description: 'Subnet B private.'
    Value: !Ref SubnetBPrivate
    Export:
      Name: !Sub '${CustomerId}-SubnetBPrivate'
  SubnetCPublic:
    Description: 'Subnet C public.'
    Value: !Ref SubnetCPublic
    Export:
      Name: !Sub '${CustomerId}-SubnetCPublic'
  SubnetCPrivate:
    Description: 'Subnet C private.'
    Value: !Ref SubnetCPrivate
    Export:
      Name: !Sub '${CustomerId}-SubnetCPrivate'
  SubnetAIntra:
    Description: 'Subnet A intra.'
    Value: !Ref SubnetAIntra
    Export:
      Name: !Sub '${CustomerId}-SubnetAIntra'
  SubnetBIntra:
    Description: 'Subnet B intra.'
    Value: !Ref SubnetBIntra
    Export:
      Name: !Sub '${CustomerId}-SubnetBIntra'
  SubnetCIntra:
    Description: 'Subnet C intra.'
    Value: !Ref SubnetCIntra
    Export:
      Name: !Sub '${CustomerId}-SubnetCIntra'
  IPAddress:
    Description: 'The public IP address of the NAT gateway.'
    Value: !Ref EIP
    Export:
      Name: !Sub '${CustomerId}-IPAddress'
  outputNatGateway:
    Description: 'NAt Gateway.'
    Value: !Ref NatGateway
    Export:
      Name: !Sub '${CustomerId}-NAT'
